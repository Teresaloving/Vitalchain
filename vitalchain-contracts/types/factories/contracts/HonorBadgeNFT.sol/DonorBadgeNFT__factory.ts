/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DonorBadgeNFT,
  DonorBadgeNFTInterface,
} from "../../../contracts/HonorBadgeNFT.sol/DonorBadgeNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "vitalChainAddress",
        type: "address",
      },
      {
        internalType: "uint32[]",
        name: "thresholds",
        type: "uint32[]",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "levelIndex",
        type: "uint256",
      },
    ],
    name: "BadgeMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "levelIndex",
        type: "uint256",
      },
    ],
    name: "claimBadge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBase",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "thresholds",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vitalChain",
    outputs: [
      {
        internalType: "contract IDonorChain",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526001600955348015610014575f5ffd5b50604051611d01380380611d018339810160408190526100339161044f565b336040518060400160405280601681526020017f566974616c436861696e20486f6e6f7220426164676500000000000000000000815250604051806040016040528060078152602001662b21a427a727a960c91b815250815f908161009891906105d7565b5060016100a582826105d7565b5050506001600160a01b0381166100d557604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100de8161028f565b5061025961017d604080516080810182525f80825260208201819052918101829052606081019190915250604080516080810182527350157cffd6bbfa2dece204a89ec419c23ef5755d815273cd3ab3bd6bcc0c0bf3e27912a92043e817b1cf69602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b6001600160a01b03831660805281516102799060079060208501906102e0565b50600861028682826105d7565b50505050610691565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b828054828255905f5260205f209060070160089004810192821561037c579160200282015f5b8382111561034a57835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302610306565b801561037a5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261034a565b505b5061038892915061038c565b5090565b5b80821115610388575f815560010161038d565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b03811182821017156103dc576103dc6103a0565b604052919050565b5f82601f8301126103f3575f5ffd5b81516001600160401b0381111561040c5761040c6103a0565b61041f601f8201601f19166020016103b4565b818152846020838601011115610433575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f60608486031215610461575f5ffd5b83516001600160a01b0381168114610477575f5ffd5b60208501519093506001600160401b03811115610492575f5ffd5b8401601f810186136104a2575f5ffd5b80516001600160401b038111156104bb576104bb6103a0565b8060051b6104cb602082016103b4565b918252602081840181019290810190898411156104e6575f5ffd5b6020850194505b8385101561051c578451925063ffffffff8316831461050a575f5ffd5b828252602094850194909101906104ed565b6040890151909650935050506001600160401b03821115905061053d575f5ffd5b610549868287016103e4565b9150509250925092565b600181811c9082168061056757607f821691505b60208210810361058557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156105d257805f5260205f20601f840160051c810160208510156105b05750805b601f840160051c820191505b818110156105cf575f81556001016105bc565b50505b505050565b81516001600160401b038111156105f0576105f06103a0565b610604816105fe8454610553565b8461058b565b6020601f821160018114610636575f831561061f5750848201515b5f19600385901b1c1916600184901b1784556105cf565b5f84815260208120601f198516915b828110156106655787850151825560209485019460019092019101610645565b508482101561068257868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6080516116516106b05f395f818161027c015261054801526116515ff3fe608060405234801561000f575f5ffd5b506004361061016e575f3560e01c8063715018a6116100d2578063b88d4fde11610088578063da1f12ab11610063578063da1f12ab14610305578063e985e9c51461030d578063f2fde38b14610348575f5ffd5b8063b88d4fde146102ca578063c87b56dd146102dd578063cda43b3a146102f0575f5ffd5b80638da5cb5b116100b85780638da5cb5b1461029e57806395d89b41146102af578063a22cb465146102b7575f5ffd5b8063715018a61461026f5780638618be5414610277575f5ffd5b806323b872dd1161012757806355f804b31161010d57806355f804b3146102285780636352211e1461023b57806370a082311461024e575f5ffd5b806323b872dd1461020257806342842e0e14610215575f5ffd5b8063081812fc11610157578063081812fc146101af578063095ea7b3146101da57806323415135146101ef575f5ffd5b806301ffc9a71461017257806306fdde031461019a575b5f5ffd5b610185610180366004611114565b61035b565b60405190151581526020015b60405180910390f35b6101a26103ac565b604051610191919061115d565b6101c26101bd36600461116f565b61043b565b6040516001600160a01b039091168152602001610191565b6101ed6101e83660046111a1565b610462565b005b6101ed6101fd36600461116f565b610471565b6101ed6102103660046111c9565b6106cb565b6101ed6102233660046111c9565b610754565b6101ed610236366004611203565b610773565b6101c261024936600461116f565b610788565b61026161025c366004611271565b610792565b604051908152602001610191565b6101ed6107d7565b6101c27f000000000000000000000000000000000000000000000000000000000000000081565b6006546001600160a01b03166101c2565b6101a26107ea565b6101ed6102c536600461128a565b6107f9565b6101ed6102d83660046112d7565b610804565b6101a26102eb36600461116f565b61081c565b6102f8610881565b60405161019191906113b4565b612711610261565b61018561031b3660046113fc565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b6101ed610356366004611271565b610901565b5f6001600160e01b031982166380ac58cd60e01b148061038b57506001600160e01b03198216635b5e139f60e01b145b806103a657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f80546103ba9061142d565b80601f01602080910402602001604051908101604052809291908181526020018280546103e69061142d565b80156104315780601f1061040857610100808354040283529160200191610431565b820191905f5260205f20905b81548152906001019060200180831161041457829003601f168201915b5050505050905090565b5f6104458261093e565b505f828152600460205260409020546001600160a01b03166103a6565b61046d828233610976565b5050565b60075481106104c75760405162461bcd60e51b815260206004820152600d60248201527f696e76616c6964206c6576656c0000000000000000000000000000000000000060448201526064015b60405180910390fd5b335f908152600a6020908152604080832084845290915290205460ff16156105315760405162461bcd60e51b815260206004820152600f60248201527f616c726561647920636c61696d6564000000000000000000000000000000000060448201526064016104be565b6040516351948a4560e11b81523360048201525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a329148a90602401602060405180830381865afa158015610595573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b99190611465565b9050600782815481106105ce576105ce611488565b905f5260205f2090600891828204019190066004029054906101000a900463ffffffff1663ffffffff168163ffffffff16101561064d5760405162461bcd60e51b815260206004820152601660248201527f696e73756666696369656e7420646f6e6174696f6e730000000000000000000060448201526064016104be565b600980545f918261065d8361149c565b91905055905061066d3382610983565b335f818152600a60209081526040808320878452825291829020805460ff1916600117905590518581528392917f7e6f783c7d2fd31e9979cbb09639e191e20de085caf64b2875d53ff862aa3baa91015b60405180910390a3505050565b6001600160a01b0382166106f457604051633250574960e11b81525f60048201526024016104be565b5f61070083833361099c565b9050836001600160a01b0316816001600160a01b03161461074e576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016104be565b50505050565b61076e83838360405180602001604052805f815250610804565b505050565b61077b610a9b565b600861076e828483611504565b5f6103a68261093e565b5f6001600160a01b0382166107bc576040516322718ad960e21b81525f60048201526024016104be565b506001600160a01b03165f9081526003602052604090205490565b6107df610a9b565b6107e85f610ac8565b565b6060600180546103ba9061142d565b61046d338383610b26565b61080f8484846106cb565b61074e3385858585610bbc565b60606108278261093e565b505f610831610ce4565b90505f81511161084f5760405180602001604052805f81525061087a565b8061085984610cf3565b60405160200161086a9291906115d5565b6040516020818303038152906040525b9392505050565b6060600780548060200260200160405190810160405280929190818152602001828054801561043157602002820191905f5260205f20905f905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116108bb5790505050505050905090565b610909610a9b565b6001600160a01b03811661093257604051631e4fbdf760e01b81525f60048201526024016104be565b61093b81610ac8565b50565b5f818152600260205260408120546001600160a01b0316806103a657604051637e27328960e01b8152600481018490526024016104be565b61076e8383836001610d90565b61046d828260405180602001604052805f815250610ebf565b5f828152600260205260408120546001600160a01b03908116908316156109c8576109c8818486610ed6565b6001600160a01b03811615610a02576109e35f855f5f610d90565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615610a30576001600160a01b0385165f908152600360205260409020805460010190555b5f84815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6006546001600160a01b031633146107e85760405163118cdaa760e01b81523360048201526024016104be565b600680546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216610b5857604051630b61174360e31b81526001600160a01b03831660048201526024016104be565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191016106be565b6001600160a01b0383163b15610cdd57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610bfe9088908890879087906004016115e9565b6020604051808303815f875af1925050508015610c38575060408051601f3d908101601f19168201909252610c3591810190611629565b60015b610c9f573d808015610c65576040519150601f19603f3d011682016040523d82523d5f602084013e610c6a565b606091505b5080515f03610c9757604051633250574960e11b81526001600160a01b03851660048201526024016104be565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610cdb57604051633250574960e11b81526001600160a01b03851660048201526024016104be565b505b5050505050565b6060600880546103ba9061142d565b60605f610cff83610f3a565b60010190505f8167ffffffffffffffff811115610d1e57610d1e6112c3565b6040519080825280601f01601f191660200182016040528015610d48576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610d5257509392505050565b8080610da457506001600160a01b03821615155b15610e83575f610db38461093e565b90506001600160a01b03831615801590610ddf5750826001600160a01b0316816001600160a01b031614155b8015610e1057506001600160a01b038082165f9081526005602090815260408083209387168352929052205460ff16155b15610e395760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016104be565b8115610e815783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f908152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610ec9838361101b565b61076e335f858585610bbc565b610ee183838361107c565b61076e576001600160a01b038316610f0f57604051637e27328960e01b8152600481018290526024016104be565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016104be565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610f82577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610fae576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610fcc57662386f26fc10000830492506010015b6305f5e1008310610fe4576305f5e100830492506008015b6127108310610ff857612710830492506004015b6064831061100a576064830492506002015b600a83106103a65760010192915050565b6001600160a01b03821661104457604051633250574960e11b81525f60048201526024016104be565b5f61105083835f61099c565b90506001600160a01b0381161561076e576040516339e3563760e11b81525f60048201526024016104be565b5f6001600160a01b038316158015906110f75750826001600160a01b0316846001600160a01b031614806110d457506001600160a01b038085165f9081526005602090815260408083209387168352929052205460ff165b806110f757505f828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b03198116811461093b575f5ffd5b5f60208284031215611124575f5ffd5b813561087a816110ff565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f61087a602083018461112f565b5f6020828403121561117f575f5ffd5b5035919050565b80356001600160a01b038116811461119c575f5ffd5b919050565b5f5f604083850312156111b2575f5ffd5b6111bb83611186565b946020939093013593505050565b5f5f5f606084860312156111db575f5ffd5b6111e484611186565b92506111f260208501611186565b929592945050506040919091013590565b5f5f60208385031215611214575f5ffd5b823567ffffffffffffffff81111561122a575f5ffd5b8301601f8101851361123a575f5ffd5b803567ffffffffffffffff811115611250575f5ffd5b856020828401011115611261575f5ffd5b6020919091019590945092505050565b5f60208284031215611281575f5ffd5b61087a82611186565b5f5f6040838503121561129b575f5ffd5b6112a483611186565b9150602083013580151581146112b8575f5ffd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f5f608085870312156112ea575f5ffd5b6112f385611186565b935061130160208601611186565b925060408501359150606085013567ffffffffffffffff811115611323575f5ffd5b8501601f81018713611333575f5ffd5b803567ffffffffffffffff81111561134d5761134d6112c3565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561137c5761137c6112c3565b604052818152828201602001891015611393575f5ffd5b816020840160208301375f6020838301015280935050505092959194509250565b602080825282518282018190525f918401906040840190835b818110156113f157835163ffffffff168352602093840193909201916001016113cd565b509095945050505050565b5f5f6040838503121561140d575f5ffd5b61141683611186565b915061142460208401611186565b90509250929050565b600181811c9082168061144157607f821691505b60208210810361145f57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60208284031215611475575f5ffd5b815163ffffffff8116811461087a575f5ffd5b634e487b7160e01b5f52603260045260245ffd5b5f600182016114b957634e487b7160e01b5f52601160045260245ffd5b5060010190565b601f82111561076e57805f5260205f20601f840160051c810160208510156114e55750805b601f840160051c820191505b81811015610cdd575f81556001016114f1565b67ffffffffffffffff83111561151c5761151c6112c3565b6115308361152a835461142d565b836114c0565b5f601f841160018114611561575f851561154a5750838201355b5f19600387901b1c1916600186901b178355610cdd565b5f83815260208120601f198716915b828110156115905786850135825560209485019460019092019101611570565b50868210156115ac575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b5f81518060208401855e5f93019283525090919050565b5f6110f76115e383866115be565b846115be565b6001600160a01b03851681526001600160a01b0384166020820152826040820152608060608201525f61161f608083018461112f565b9695505050505050565b5f60208284031215611639575f5ffd5b815161087a816110ff56fea164736f6c634300081b000a";

type DonorBadgeNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonorBadgeNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DonorBadgeNFT__factory extends ContractFactory {
  constructor(...args: DonorBadgeNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    vitalChainAddress: AddressLike,
    thresholds: BigNumberish[],
    baseURI_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      vitalChainAddress,
      thresholds,
      baseURI_,
      overrides || {}
    );
  }
  override deploy(
    vitalChainAddress: AddressLike,
    thresholds: BigNumberish[],
    baseURI_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      vitalChainAddress,
      thresholds,
      baseURI_,
      overrides || {}
    ) as Promise<
      DonorBadgeNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DonorBadgeNFT__factory {
    return super.connect(runner) as DonorBadgeNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonorBadgeNFTInterface {
    return new Interface(_abi) as DonorBadgeNFTInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DonorBadgeNFT {
    return new Contract(address, _abi, runner) as unknown as DonorBadgeNFT;
  }
}
