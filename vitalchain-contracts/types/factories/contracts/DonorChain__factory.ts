/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DonorChain,
  DonorChainInterface,
} from "../../contracts/DonorChain";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ipfsCid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "date",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "locationHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hospitalHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "donationCategory",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "transparentVolume",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "euint32",
        name: "encVolume",
        type: "bytes32",
      },
    ],
    name: "VitalRecordLogged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getEncryptedCountOf",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyEncryptedCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyEncryptedLastVolume",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getPublicCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint32",
        name: "inputVolume",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "ipfsCid",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "date",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "locationHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "hospitalHash",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "donationCategory",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "transparentVolume",
        type: "uint32",
      },
    ],
    name: "submitDonation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b5061018a6100ae604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b6108a5806101975f395ff3fe608060405234801561000f575f5ffd5b506004361061006f575f3560e01c8063c29a2a191161004d578063c29a2a1914610105578063da1f12ab1461011a578063ee2839f314610122575f5ffd5b80633e5ec3f314610073578063a329148a146100ae578063b753da16146100f1575b5f5ffd5b61009b610081366004610627565b6001600160a01b03165f9081526020819052604090205490565b6040519081526020015b60405180910390f35b6100dc6100bc366004610627565b6001600160a01b03165f9081526002602052604090205463ffffffff1690565b60405163ffffffff90911681526020016100a5565b335f9081526001602052604090205461009b565b6101186101133660046106ba565b610136565b005b61271161009b565b335f9081526020819052604090205461009b565b335f9081526020819052604081205490610159826101546001610266565b61027e565b335f9081526020819052604090208190559050610175816102b3565b5061018081336102c2565b505f6101c18d8d8d8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506102d492505050565b335f90815260016020526040902081905590506101dd816102b3565b506101e881336102c2565b50335f8181526002602052604090819020805463ffffffff8082166001011663ffffffff19909116179055517f2a0d600c846d9fe4a30ed018cabda81a4486bfd0f340b5ce3757add35c95a30e9061024f908d908d908d908d908d908d908d908b90610783565b60405180910390a250505050505050505050505050565b5f6102788263ffffffff1660046102e1565b92915050565b5f826102905761028d5f610266565b92505b816102a15761029e5f610266565b91505b6102ac83835f61039e565b9392505050565b5f6102be823061047e565b5090565b5f6102cd838361047e565b5090919050565b5f6102ac83836004610507565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb906103569087908790600401610813565b6020604051808303815f875af1158015610372573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103969190610827565b949350505050565b5f5f82156103b15750600160f81b6103b4565b505f5b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700600181015460405163022f65e760e31b815260048101899052602481018890527fff00000000000000000000000000000000000000000000000000000000000000851660448201529192506001600160a01b03169063117b2f38906064016020604051808303815f875af1158015610450573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104749190610827565b9695505050505050565b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b1580156104ec575f5ffd5b505af11580156104fe573d5f5f3e3d5ffd5b50505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b9061058090889033908990899060040161083e565b6020604051808303815f875af115801561059c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c09190610827565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610609575f5ffd5b505af115801561061b573d5f5f3e3d5ffd5b50505050509392505050565b5f60208284031215610637575f5ffd5b81356001600160a01b03811681146102ac575f5ffd5b5f5f83601f84011261065d575f5ffd5b50813567ffffffffffffffff811115610674575f5ffd5b60208301915083602082850101111561068b575f5ffd5b9250929050565b803560ff811681146106a2575f5ffd5b919050565b803563ffffffff811681146106a2575f5ffd5b5f5f5f5f5f5f5f5f5f5f6101008b8d0312156106d4575f5ffd5b8a35995060208b013567ffffffffffffffff8111156106f1575f5ffd5b6106fd8d828e0161064d565b909a5098505060408b013567ffffffffffffffff81111561071c575f5ffd5b6107288d828e0161064d565b90985096505060608b013567ffffffffffffffff81168114610748575f5ffd5b945060808b0135935060a08b0135925061076460c08c01610692565b915061077260e08c016106a7565b90509295989b9194979a5092959850565b60e081528760e082015287896101008301375f61010089830101525f610100601f19601f8b0116830101905067ffffffffffffffff8816602083015286604083015285606083015260ff8516608083015263ffffffff841660a08301528260c08301529998505050505050505050565b6054811061080f57634e487b7160e01b5f52602160045260245ffd5b9052565b828152604081016102ac60208301846107f3565b5f60208284031215610837575f5ffd5b5051919050565b8481526001600160a01b0384166020820152608060408201525f8351806080840152806020860160a085015e5f60a0828501015260a0601f19601f83011684010191505061088f60608301846107f3565b9594505050505056fea164736f6c634300081b000a";

type DonorChainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonorChainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DonorChain__factory extends ContractFactory {
  constructor(...args: DonorChainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DonorChain & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DonorChain__factory {
    return super.connect(runner) as DonorChain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonorChainInterface {
    return new Interface(_abi) as DonorChainInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DonorChain {
    return new Contract(address, _abi, runner) as unknown as DonorChain;
  }
}
